//TODO: finish this up using the examples from here and the ebnf below as a guide
// https://pest.rs/book/examples/json.html

//this file handles manipulations server side, such as snippet replacement
//ideally everything server side is only run once
/*
EBNF format defined at https://github.com/microsoft/language-server-protocol/blob/main/snippetSyntax.md

any         ::= tabstop | placeholder | choice | variable | text
tabstop     ::= '$' int | '${' int '}'
placeholder ::= '${' int ':' any '}'
choice      ::= '${' int '|' text (',' text)* '|}'
variable    ::= '$' var | '${' var }'
                | '${' var ':' any '}'
                | '${' var '/' regex '/' (format | text)+ '/' options '}'
format      ::= '$' int | '${' int '}'
                | '${' int ':' '/upcase' | '/downcase' | '/capitalize' '}'
                | '${' int ':+' if '}'
                | '${' int ':?' if ':' else '}'
                | '${' int ':-' else '}' | '${' int ':' else '}'
regex       ::= JavaScript Regular Expression value (ctor-string)
options     ::= JavaScript Regular Expression option (ctor-options)
var         ::= [_a-zA-Z] [_a-zA-Z0-9]*
int         ::= [0-9]+
text        ::= .*
*/
text = _{ ".*" }
variable 
//note from the perspective of sniper tabstops placeholders and choices should be the same
//because it only cares about ensuring the tabstops are properly offset when building the snippet
tabstop = {"$"~(ASCII_DIGIT+ |"{"~ ASCII_DIGIT~ "}"}
placeholder = {"$"~(ASCII_DIGIT+ |"{"~ASCII_DIGIT~"}")
target_directive=_{ }
sniper_directive=_{"@"}